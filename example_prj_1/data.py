def load_data(filename: str) -> list[str]:
    with open(filename, "r") as file:
        return file.readlines()
    


def clean_data(temperature_data: list[str]) -> list[float]:
    return [float(temp.strip()) for temp in temperature_data if temp.strip()]


# ChatGPT поясни будь ласка логіку виконання коду
# def load_data(filename: str) -> list[str]:
#     with open(filename, "r") as file:
#         return file.readlines()

# Цей код визначає функцію load_data, яка приймає один параметр — ім'я файлу (стрічку filename) і повертає список рядків з цього файлу. Ось як він працює крок за кроком:

# 1. Параметр функції:
# python
# Копировать
# filename: str
# Функція очікує на вхід строку — ім'я файлу, який потрібно прочитати.

# 2. Відкриття файлу:
# python
# Копировать
# with open(filename, "r") as file:
# open(filename, "r"): Відкривається файл з ім'ям, яке передано в аргументі filename. Оскільки вказаний режим "r", це означає, що файл відкривається тільки для читання. Якщо файл не існує, буде викинута помилка FileNotFoundError.

# with: Використання конструкції with забезпечує автоматичне закриття файлу після завершення роботи з ним, навіть якщо в процесі виникне помилка. Це зручно, щоб не залишати відкриті файли.

# as file: Вказує, що відкритий файл буде доступний під змінною file. Це дозволяє взаємодіяти з файлом, наприклад, читати його вміст.

# 3. Читання файлу:
# python
# Копировать
# return file.readlines()
# file.readlines(): Читає весь вміст файлу та повертає його у вигляді списку рядків. Кожен рядок буде окремим елементом списку, включаючи символи нового рядка (\n), які знаходяться на кінці кожного рядка у файлі.
# 4. Повернення результату:
# Після того як файл прочитаний, функція повертає список рядків, де кожен рядок — це один рядок із файлу.
# Приклад:
# Припустимо, у вас є файл data.txt з таким вмістом:

# Копировать
# 23.5
# 18.2
# 25.0
# Якщо ви викликаєте функцію:

# python
# Копировать
# load_data("data.txt")
# Функція відкриє файл, прочитає його вміст і поверне список:

# python
# Копировать
# ['23.5\n', '18.2\n', '25.0\n']
# Як бачите, кожен рядок буде містити символ нового рядка (\n), який був у файлі.

# Висновок:
# Ця функція відкриває вказаний файл для читання, читає всі його рядки та повертає їх у вигляді списку.


'''
ChatGPT поясни будь ласка логіку виконання коду
def clean_data(temperature_data: list[str]) -> list[float]:
    return [float(temp.strip()) for temp in temperature_data if temp.strip()]
ChatGPT сказал:
Цей код визначає функцію clean_data, яка приймає список рядків temperature_data, що містить температурні значення, та повертає новий список типу float. Ось як він працює крок за кроком:

1. Параметр функції:
python
Копировать
temperature_data: list[str]
Функція очікує на вхід список рядків (list[str]), де кожен рядок — це температура у вигляді тексту.

2. Логіка виконання:
python
Копировать
return [float(temp.strip()) for temp in temperature_data if temp.strip()]
Цикл for temp in temperature_data: Пройдемо по кожному елементу у списку temperature_data. Кожен елемент буде позначений як temp.

Метод .strip(): Для кожного елементу (рядка temp) виконується метод .strip(), який видаляє пробіли з початку і кінця рядка. Це важливо, якщо в рядку є зайві пробіли або символи нового рядка, які можуть з'являтися під час введення даних.

Умова if temp.strip(): Якщо після видалення пробілів рядок не порожній (тобто, температура не порожня і не складається тільки з пробілів), то цей рядок буде оброблений далі. Якщо ж після виключення пробілів рядок порожній, він буде пропущений.

float(temp.strip()): Після того як ми впевнилися, що рядок не порожній, ми перетворюємо його на число з плаваючою точкою (тип float).

Список результатів: Використовуємо генератор списку, щоб повернути новий список чисел, що містить всі коректно перетворені температури.

Приклад:
python
Копировать
temperature_data = [" 23.5", "  ", "18.2", " 25.0 ", "bad data"]
clean_data(temperature_data)
" 23.5" стане 23.5 (пробіли будуть видалені, і значення перетвориться на float).
" " (порожній рядок з пробілами) буде пропущений.
"18.2" стане 18.2.
" 25.0 " стане 25.0.
"bad data" буде пропущений, бо це не число.
Результат:

python
Копировать
[23.5, 18.2, 25.0]
Висновок:
Ця функція очищає список температурних даних від зайвих пробілів і нечислових значень, а потім перетворює їх на числа типу float.
'''